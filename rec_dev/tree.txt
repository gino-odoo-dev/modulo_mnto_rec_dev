rec_dev/
├── __init__.py
├── __manifest__.py
│
└── models/
    ├── __init__.py
    └── receta.py
    └── articulo.py
    └── campliado.py
    └── cantidad.py
    └── codigosec.py
    └── compmanu.py
    └── componente.py
    └── cunitario.py
    └── depto.py
    └── descripcion.py
    └── secuencia.py
    └── secuencias.py
    └── temporada.py
    └── temporadas.py
    └── umedida.py
    └── unimedida.py
├── views/
│   └── rec_model_views.xml
│
├── security/
│   └── ir.model.access.csv
│
├── tests/
│   └── text_receta.py/
│
└── static/
    └── src/
        └── css/
            └── styles.css

modelo init 

from . import temporada
from . import temporadas
from . import secuencia
from . import secuencias
from . import codigosec
from . import componente
from . import descripcion
from . import umedida
from . import unimedida
from . import depto
from . import articulo
from . import compmanu
from . import factperdida
from . import cantidad
from . import cunitario
from . import campliado
from . import receta


modelo articulo 

from odoo import models, fields
from odoo.exceptions import ValidationError

class Articulo(models.Model):
    _name = 'articulo.model'
    _description = 'Articulo'
    _rec_name = 'nombre' 

    nombre = fields.Char(string="Nombre", required=True)

    @api.constrains('nombre')
    def _check_nombre(self):
        for record in self:
            if not record.nombre:
                raise ValidationError("El codigo SKU no existe.")
            
            if len(record.nombre) != 18:
                raise ValidationError("El nombre debe tener exactamente 18 caracteres.") 

modelo campliado

from odoo import models 

class Campliado(models.Model):
    _name = 'campliado.model'
    _description = 'Costo Ampliado'


modelo codigosec

from odoo import models, fields

class CodigoSec(models.Model):
    _name = 'codigosec.model'
    _description = 'Codigo Secuencia'
    _rec_name = 'codigo'

    codigo = fields.Char(string='CodigoSec', required=True)


modelo compmanu

from odoo import models

class Compmanu(models.Model):
    _name = 'compmanu.model'
    _description = 'Compra o Manufacturado'


modelo componente

from odoo import models, fields 

class Componente(models.Model):
    _name = 'componente.model'
    _description = 'Componente'
    _rec_name = 'codigo'

    codigo = fields.Char(string="Codigo", required=True)
    descripcion = fields.Text(string="Descripcion", required=True)
    um = fields.Char(string="Unidad de Medida")


modelo cunitario

from odoo import models

class Cunitario(models.Model):
    _name = 'cunitario.model'
    _description = 'Costo Unitario'


modelo depto

from odoo import models, fields

class Depto(models.Model):
    _name = 'depto.model'
    _description = 'Departamento'
    _rec_name = 'nombre'

    nombre = fields.Char(string="Nombre", required=True)


modelo descripcion

from odoo import models 

class Descripcion(models.Model):
    _name = 'descripcion.model'
    _description = 'Descripcion'


modelo factperdida

from odoo import models

class Factperdida(models.Model):
    _name = 'factperdida.model'
    _description = 'Factor de Perdida'


modelo secuencia

from odoo import models, fields

class Secuencia(models.Model):
    _name = 'secuencia_model'
    _description = 'Secuencia'
    _rec_name = 'codigo'

    codigo = fields.Char(string="Codigo", required=True)


modelo secuncias

from odoo import models, fields  

class Secuencias(models.Model):
    _name = 'rec.secuencia'
    _description = 'Secuencias'
    _rec_name = 'nombre'

    codigo = fields.Char(string="Codigo", required=True)
    nombre = fields.Char(string="Nombre", required=True)


modelo temporada

from odoo import models

class Temporada(models.Model):
    _name = 'temporada.model'
    _description = 'Temporada'


modelo temporadas

from odoo import models

class Temporadas(models.Model):
    _name = 'cl.product.temporada'
    _description = 'Temporadas'


modelo umedida

from odoo import models

class Umedida(models.Model):
    _name = 'umedida.model'
    _description = 'Umedida'


modelo unimedida

from odoo import models 

class Unimedida(models.Model):
    _name = 'unimedida.model'
    _description = 'Unidad de Medida'   


modelo receta 

from odoo import models, fields, api
from odoo.exceptions import ValidationError

class Receta(models.Model):
    _name = 'receta'
    _description = 'Receta'
    _rec_name = 'nombre_receta'

    temporadas_id = fields.Many2one('cl.product.temporada', string='Temporadas', readonly=False)
    temporada_id = fields.Many2one('temporada.model', string='Temporada', readonly=False)
    secuencia_id = fields.Many2one('secuencia.model', string='Secuencia', readonly=False)
    secuencias_id = fields.Many2one('rec.secuencia', string='Secuencias', readonly=False)
    descripcion_id = fields.Many2one('descripcion.model', string='Descripcion', readonly=True)
    descripcion = fields.Text(string='Descripcion', related='componente_id.descripcion', store=False, readonly=True) 
    codigosec_id = fields.Many2one('codigosec.model', string='CodigoSec', readonly=False)    
    componente_id = fields.Many2one('componente.model', string='Componente', readonly=False)    
    uni_medida_id = fields.Many2one('unimedida.model', string='UM', readonly=True)
    umedida = fields.Char(string='Umedida', related='componente_id.um', store=False, readonly=True)
    depto_id = fields.Many2one('depto.model', string='Departamento', readonly=False)
    articulo_id = fields.Many2one('articulo.model', string='Articulo')
    comp_manu_id = fields.Many2one('compmanu.model', string='C/M', readonly=True)   
    fact_perdida_id = fields.Float(string='Factor de Perdida (%)', readonly=False)
    cantidad_id = fields.Integer(string='Cantidad', readonly=False)
    c_unitario_id = fields.Float(string='Costo Unitario', readonly=False)
    c_ampliado_id = fields.Float(string='Costo Ampliado', compute='calcular_costo_ampliado', store=True, readonly=True, widget="integer")
    nombre_receta = fields.Char(string='Nombre de la receta', compute='_compute_nombre_receta', store=True)
    
    @api.depends('articulo_id', 'temporadas_id')
    def _compute_nombre_receta(self):
        for record in self:
            articulo_nombre = record.articulo_id.nombre if record.articulo_id else "Sin Nombre"
            temporada_nombre = record.temporadas_id.name if record.temporadas_id else "Sin Temporada"
            
            record.nombre_receta = f"Articulo: {articulo_nombre} \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 Temporada: {temporada_nombre}"

    def name_get(self):
        result = []
        for record in self:
            if self.env.context.get('form_view'):  
                result.append((record.id, "Ficha Tecnica"))
                nombre = record.nombre_receta if record.nombre_receta else "Articulo: Sin Nombre"
                result.append((record.id, nombre))
        return result
    
    state = fields.Selection([
        ('draft', 'Borrador'),
        ('next', 'Siguiente')
    ], default='draft', string="Estado")

    def next_button(self):
        self.ensure_one()
        self.state = 'next'
        self._cr.commit()

        return {
            'type': 'ir.actions.act_window',
            'res_model': 'receta',
            'view_mode': 'tree,form',  
            'target': 'current',
            'context': {
                'default_articulo_id': self.articulo_id.id, 
                'search_default_articulo_id': self.articulo_id.id, 
            },
            'domain': [('articulo_id', '=', self.articulo_id.id)], 
        }

    @api.depends('cantidad_id', 'fact_perdida_id', 'c_unitario_id')
    def calcular_costo_ampliado(self):
        for record in self:
            if record.cantidad_id and record.fact_perdida_id and record.c_unitario_id:
                if record.fact_perdida_id > 0:
                    cantidad_perdida = (record.cantidad_id * record.fact_perdida_id) / 100
                    record.c_ampliado_id = int(round(cantidad_perdida * record.c_unitario_id)) 
                else:
                    record.c_ampliado_id = 0
            else:
                record.c_ampliado_id = 0

    @api.onchange('componente_id')
    def _onchange_componente_id(self):
        if self.componente_id:
            self.descripcion = self.componente_id.descripcion or ''
            self.umedida = self.componente_id.um or ''
        else:
            self.descripcion = ''
            self.umedida = ''

    
    vista 

    <odoo>
    <record id="view_receta_form" model="ir.ui.view">
        <field name="name">receta.form</field>
        <field name="model">receta</field>
        <field name="arch" type="xml">
            <form string="Mnto Ficha Tecnica">
                <sheet>
                    <group>
                        <field name="temporadas_id" style="width: 30%;"/>
                        <field name="articulo_id" style="width: 30%;"/>
                    </group>
                    <header>
                        <button name="next_button" string="Siguiente" type="object" class="oe_highlight" context="{'create': False}"/>
                    </header>
                </sheet>
            </form>
        </field>
    </record>

    <record id="view_receta_tree" model="ir.ui.view">
        <field name="name">receta.tree</field>
        <field name="model">receta</field>
        <field name="arch" type="xml">
            <tree string="Mnto Ficha Tecnica" editable="bottom">
                <field name="codigosec_id" widget="codigo" class="codigo-field"/>
                <field name="componente_id" widget="codigo"/>
                <field name="descripcion" string="Descripcion" readonly="1"/>
                <field name="comp_manu_id"/>
                <field name="umedida" string="Umedida" readonly="1"/>
                <field name="cantidad_id"/>
                <field name="fact_perdida_id" widget="percentage"/>
                <field name="c_unitario_id"/>
                <field name="c_ampliado_id" widget="monetary"/>
                <field name="depto_id" widget="nombre"/>                
                <button name="unlink" string="Eliminar" type="object" icon="fa-trash" confirm="¿Estas seguro de eliminar el registro de la ficha tecnica?"/>
                <button name="next_button" string="Siguiente" type="object" class="oe_highlight" context="{'create': False}"/>
            </tree>
        </field>
    </record>

    <record id="action_receta" model="ir.actions.act_window">
        <field name="name">Mnto Ficha Tecnica</field>
        <field name="res_model">receta</field>
        <field name="view_mode">form,tree</field>
    </record>

    <menuitem id="menu_receta" name="Mnto Ficha Tecnica" sequence="10" groups="base.group_user"/>
    <menuitem id="submenu_receta" name="Volver" parent="menu_receta" action="action_receta"/>
</odoo>

security

id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_receta_user,access_receta_user,model_receta,base.group_user,1,1,1,1
access_temporada_model_user,access_temporada_model_user,model_temporada_model,base.group_user,1,1,1,0
access_temporadas_model_user,access_temporadas_model_user,model_cl_product_temporada,base.group_user,1,1,1,0
access_secuencia_model_user,access_secuencia_model_user,model_secuencia_model,base.group_user,1,1,1,0
access_secuencias_model_user,access_secuencias_model_user,model_rec_secuencia,base.group_user,1,1,1,1
access_codigosec_model_user,access_codigosec_model_user,model_codigosec_model,base.group_user,1,1,1,1
access_componente_model_user,access_componente_model_user,model_componente_model,base.group_user,1,1,1,1
access_descripcion_model_user,access_descripcion_model_user,model_descripcion_model,base.group_user,1,1,1,1
access_unimedida_model_user,access_unimedida_model_user,model_unimedida_model,base.group_user,1,1,1,1
access_depto_model_user,access_depto_model_user,model_depto_model,base.group_user,1,1,1,1
access_articulo_model_user,access_articulo_model_user,model_articulo_model,base.group_user,1,1,1,0
access_compmanu_model_user,access_compmanu_model_user,model_compmanu_model,base.group_user,1,1,1,1
access_factperdida_model_user,access_factperdida_model_user,model_factperdida_model,base.group_user,1,1,1,1
access_cantidad_model_user,access_cantidad_model_user,model_cantidad_model,base.group_user,1,1,1,1
access_cunitario_model_user,access_cunitario_model_user,model_cunitario_model,base.group_user,1,1,1,1
access_campliado_model_user,access_campliado_model_user,model_campliado_model,base.group_user,1,1,1,1


manifest 

{
    'name': 'Ficha Tecnica',
    'version': '1.0',
    'summary': 'Modulo mantenimiento ficha tecnica creacion de recetas',
    'description': 'Mantenimiento Ficha Tecnica.',
    'author': 'MarcoAG',
    'depends': ['base', 'web'],
    'data': [
        'views/rec_model_views.xml',
        'security/ir.model.access.csv',
    ],
    'assets': {
        'web.assets_backend': [
            'rec_dev/static/src/css/styles.css',
            'rec_dev/static/src/js/remove_tr.js',
        ],
    },
    'installable': True,
    'application': True,
}